/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    `java-library`
    `maven-publish`
}

repositories {
    mavenLocal()
    maven {
        url = uri("https://repo.maven.apache.org/maven2/")
    }
}

dependencies {
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.10.0")
    testImplementation("org.mockito:mockito-core:4.11.0")
}

group = "com.agie"
version = "1.0-SNAPSHOT"
description = "inte-checkout-system"
java.sourceCompatibility = JavaVersion.VERSION_1_8

publishing {
    publications.create<MavenPublication>("maven") {
        from(components["java"])
    }
}

tasks.create(name: "testCoverage", type: JacocoReport, dependsOn: "test") {

    group = "Reporting"
    description = "Generate Jacoco coverage reports for the test build."

    reports {
        html.required.set(true)
        xml.required.set(true)
    }

    def excludes = [
            '**/*Test*.*',
            '**/actions/*.*',
            '**/core/*.*',
            '**/markers/*.*',
            '**/services/**/*.*',
            '**/toolwindow/*.*',
            '**/utils/*.*'
    ]

    def javaClasses = fileTree(dir: "${buildDir}/classes/java/main", excludes: excludes)
    def kotlinClasses = fileTree(dir: "${buildDir}/classes/kotlin/main", excludes: excludes)
    classDirectories.from = files([javaClasses, kotlinClasses])

    sourceDirectories.from = files([
            "$project.projectDir/src/main/java",
            "$project.projectDir/src/main/kotlin",
            "$buildDir/generated/source/kapt/test"
    ])

    executionData.from = files("${project.buildDir}/jacoco/test.exec")
}